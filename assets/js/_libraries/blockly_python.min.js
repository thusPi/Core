!function(o,t){if("function"==typeof define&&define.amd)define(["./blockly_compressed.js"],t);else if("object"==typeof exports)module.exports=t(require("./blockly_compressed.js"));else{var n=t(o.Blockly);o.Blockly.Python=n}}(this,(function(o){var t=o.__namespace__,n=new t.module$exports$Blockly$Generator.Generator("Python");n.addReservedWords("False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip"),n.ORDER_ATOMIC=0,n.ORDER_COLLECTION=1,n.ORDER_STRING_CONVERSION=1,n.ORDER_MEMBER=2.1,n.ORDER_FUNCTION_CALL=2.2,n.ORDER_EXPONENTIATION=3,n.ORDER_UNARY_SIGN=4,n.ORDER_BITWISE_NOT=4,n.ORDER_MULTIPLICATIVE=5,n.ORDER_ADDITIVE=6,n.ORDER_BITWISE_SHIFT=7,n.ORDER_BITWISE_AND=8,n.ORDER_BITWISE_XOR=9,n.ORDER_BITWISE_OR=10,n.ORDER_RELATIONAL=11,n.ORDER_LOGICAL_NOT=12,n.ORDER_LOGICAL_AND=13,n.ORDER_LOGICAL_OR=14,n.ORDER_CONDITIONAL=15,n.ORDER_LAMBDA=16,n.ORDER_NONE=99,n.ORDER_OVERRIDES=[[n.ORDER_FUNCTION_CALL,n.ORDER_MEMBER],[n.ORDER_FUNCTION_CALL,n.ORDER_FUNCTION_CALL],[n.ORDER_MEMBER,n.ORDER_MEMBER],[n.ORDER_MEMBER,n.ORDER_FUNCTION_CALL],[n.ORDER_LOGICAL_NOT,n.ORDER_LOGICAL_NOT],[n.ORDER_LOGICAL_AND,n.ORDER_LOGICAL_AND],[n.ORDER_LOGICAL_OR,n.ORDER_LOGICAL_OR]],n.isInitialized=!1,n.init=function(o){Object.getPrototypeOf(this).init.call(this),this.PASS=this.INDENT+"pass\n",this.nameDB_?this.nameDB_.reset():this.nameDB_=new t.module$exports$Blockly$Names.Names(this.RESERVED_WORDS_),this.nameDB_.setVariableMap(o.getVariableMap()),this.nameDB_.populateVariables(o),this.nameDB_.populateProcedures(o);for(var n=[],l=(0,t.module$exports$Blockly$Variables.allDeveloperVariables)(o),e=0;e<l.length;e++)n.push(this.nameDB_.getName(l[e],t.module$exports$Blockly$Names.Names.DEVELOPER_VARIABLE_TYPE)+" = None");for(o=(0,t.module$exports$Blockly$Variables.allUsedVarModels)(o),l=0;l<o.length;l++)n.push(this.nameDB_.getName(o[l].getId(),t.module$exports$Blockly$Names.NameType.VARIABLE)+" = None");this.definitions_.variables=n.join("\n"),this.isInitialized=!0},n.finish=function(o){var t,n=[],l=[];for(t in this.definitions_){var e=this.definitions_[t];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?n.push(e):l.push(e)}return o=Object.getPrototypeOf(this).finish.call(this,o),this.isInitialized=!1,this.nameDB_.reset(),(n.join("\n")+"\n\n"+l.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+o},n.scrubNakedValue=function(o){return o+"\n"},n.quote_=function(o){var t="'";return-1!==(o=o.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n")).indexOf("'")&&(-1===o.indexOf('"')?t='"':o=o.replace(/'/g,"\\'")),t+o+t},n.multiline_quote_=function(o){return o.split(/\n/g).map(this.quote_).join(" + '\\n' + \n")},n.scrub_=function(o,n,l){var e="";if(!o.outputConnection||!o.outputConnection.targetConnection){var r=o.getCommentText();r&&(r=(0,t.module$exports$Blockly$utils$string.wrap)(r,this.COMMENT_WRAP-3),e+=this.prefixLines(r+"\n","# "));for(var y=0;y<o.inputList.length;y++)o.inputList[y].type===t.module$exports$Blockly$inputTypes.inputTypes.VALUE&&(r=o.inputList[y].connection.targetBlock())&&(r=this.allNestedComments(r))&&(e+=this.prefixLines(r,"# "))}return o=o.nextConnection&&o.nextConnection.targetBlock(),e+n+(l=l?"":this.blockToCode(o))},n.getAdjustedInt=function(o,n,l,e){l=l||0,o.workspace.options.oneBasedIndex&&l--;var r=o.workspace.options.oneBasedIndex?"1":"0";return o=this.valueToCode(o,n,l?this.ORDER_ADDITIVE:this.ORDER_NONE)||r,(0,t.module$exports$Blockly$utils$string.isNumber)(o)?(o=parseInt(o,10)+l,e&&(o=-o)):(o=0<l?"int("+o+" + "+l+")":0>l?"int("+o+" - "+-l+")":"int("+o+")",e&&(o="-"+o)),o},t.Blockly.Python=n,t.Blockly.Python.variables_get=function(o){return[t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE),t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.variables_set=function(o){var n=t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"0";return t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE)+" = "+n+"\n"},t.Blockly.Python.variables_get_dynamic=t.Blockly.Python.variables_get,t.Blockly.Python.variables_set_dynamic=t.Blockly.Python.variables_set,t.Blockly.Python.text=function(o){return[t.Blockly.Python.quote_(o.getFieldValue("TEXT")),t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.text_multiline=function(o){var n=-1!==(o=t.Blockly.Python.multiline_quote_(o.getFieldValue("TEXT"))).indexOf("+")?t.Blockly.Python.ORDER_ADDITIVE:t.Blockly.Python.ORDER_ATOMIC;return[o,n]};var l=/^\s*'([^']|\\')*'\s*$/,e=function(o){return l.test(o)?[o,t.Blockly.Python.ORDER_ATOMIC]:["str("+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL]};return t.Blockly.Python.text_join=function(o){switch(o.itemCount_){case 0:return["''",t.Blockly.Python.ORDER_ATOMIC];case 1:return o=t.Blockly.Python.valueToCode(o,"ADD0",t.Blockly.Python.ORDER_NONE)||"''",e(o);case 2:var n=t.Blockly.Python.valueToCode(o,"ADD0",t.Blockly.Python.ORDER_NONE)||"''";return o=t.Blockly.Python.valueToCode(o,"ADD1",t.Blockly.Python.ORDER_NONE)||"''",[e(n)[0]+" + "+e(o)[0],t.Blockly.Python.ORDER_ADDITIVE];default:n=[];for(var l=0;l<o.itemCount_;l++)n[l]=t.Blockly.Python.valueToCode(o,"ADD"+l,t.Blockly.Python.ORDER_NONE)||"''";return["''.join([str("+(o=t.Blockly.Python.nameDB_.getDistinctName("x",t.module$exports$Blockly$Names.NameType.VARIABLE))+") for "+o+" in ["+n.join(", ")+"]])",t.Blockly.Python.ORDER_FUNCTION_CALL]}},t.Blockly.Python.text_append=function(o){var n=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE);return o=t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_NONE)||"''",n+" = str("+n+") + "+e(o)[0]+"\n"},t.Blockly.Python.text_length=function(o){return["len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_isEmpty=function(o){return["not len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_LOGICAL_NOT]},t.Blockly.Python.text_indexOf=function(o){var n="FIRST"===o.getFieldValue("END")?"find":"rfind",l=t.Blockly.Python.valueToCode(o,"FIND",t.Blockly.Python.ORDER_NONE)||"''";return n=(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_MEMBER)||"''")+"."+n+"("+l+")",o.workspace.options.oneBasedIndex?[n+" + 1",t.Blockly.Python.ORDER_ADDITIVE]:[n,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_charAt=function(o){var n=o.getFieldValue("WHERE")||"FROM_START",l=t.Blockly.Python.valueToCode(o,"VALUE","RANDOM"===n?t.Blockly.Python.ORDER_NONE:t.Blockly.Python.ORDER_MEMBER)||"''";switch(n){case"FIRST":return[l+"[0]",t.Blockly.Python.ORDER_MEMBER];case"LAST":return[l+"[-1]",t.Blockly.Python.ORDER_MEMBER];case"FROM_START":return[l+"["+(o=t.Blockly.Python.getAdjustedInt(o,"AT"))+"]",t.Blockly.Python.ORDER_MEMBER];case"FROM_END":return[l+"["+(o=t.Blockly.Python.getAdjustedInt(o,"AT",1,!0))+"]",t.Blockly.Python.ORDER_MEMBER];case"RANDOM":return t.Blockly.Python.definitions_.import_random="import random",[t.Blockly.Python.provideFunction_("text_random_letter","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(text):\n  x = int(random.random() * len(text))\n  return text[x]\n")+"("+l+")",t.Blockly.Python.ORDER_FUNCTION_CALL]}throw Error("Unhandled option (text_charAt).")},t.Blockly.Python.text_getSubstring=function(o){var n=o.getFieldValue("WHERE1"),l=o.getFieldValue("WHERE2"),e=t.Blockly.Python.valueToCode(o,"STRING",t.Blockly.Python.ORDER_MEMBER)||"''";switch(n){case"FROM_START":0===(n=t.Blockly.Python.getAdjustedInt(o,"AT1"))&&(n="");break;case"FROM_END":n=t.Blockly.Python.getAdjustedInt(o,"AT1",1,!0);break;case"FIRST":n="";break;default:throw Error("Unhandled option (text_getSubstring)")}switch(l){case"FROM_START":o=t.Blockly.Python.getAdjustedInt(o,"AT2",1);break;case"FROM_END":o=t.Blockly.Python.getAdjustedInt(o,"AT2",0,!0),(0,t.module$exports$Blockly$utils$string.isNumber)(String(o))?0===o&&(o=""):(t.Blockly.Python.definitions_.import_sys="import sys",o+=" or sys.maxsize");break;case"LAST":o="";break;default:throw Error("Unhandled option (text_getSubstring)")}return[e+"["+n+" : "+o+"]",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.text_changeCase=function(o){var n={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[o.getFieldValue("CASE")];return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+n,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_trim=function(o){var n={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[o.getFieldValue("MODE")];return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+n,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_print=function(o){return"print("+(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_NONE)||"''")+")\n"},t.Blockly.Python.text_prompt_ext=function(o){var n=t.Blockly.Python.provideFunction_("text_prompt","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):\n  try:\n    return raw_input(msg)\n  except NameError:\n    return input(msg)\n");return n=n+"("+(o.getField("TEXT")?t.Blockly.Python.quote_(o.getFieldValue("TEXT")):t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_NONE)||"''")+")","NUMBER"===o.getFieldValue("TYPE")&&(n="float("+n+")"),[n,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_prompt=t.Blockly.Python.text_prompt_ext,t.Blockly.Python.text_count=function(o){return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+".count("+(o=t.Blockly.Python.valueToCode(o,"SUB",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_replace=function(o){return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+".replace("+(t.Blockly.Python.valueToCode(o,"FROM",t.Blockly.Python.ORDER_NONE)||"''")+", "+(o=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.text_reverse=function(o){return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+"[::-1]",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.procedures_defreturn=function(o){for(var n,l=[],e=o.workspace,r=(0,t.module$exports$Blockly$Variables.allUsedVarModels)(e)||[],y=0;n=r[y];y++)n=n.name,-1===o.getVars().indexOf(n)&&l.push(t.Blockly.Python.nameDB_.getName(n,t.module$exports$Blockly$Names.NameType.VARIABLE));for(e=(0,t.module$exports$Blockly$Variables.allDeveloperVariables)(e),r=0;r<e.length;r++)l.push(t.Blockly.Python.nameDB_.getName(e[r],t.module$exports$Blockly$Names.NameType.DEVELOPER_VARIABLE));e=l.length?t.Blockly.Python.INDENT+"global "+l.join(", ")+"\n":"",l=t.Blockly.Python.nameDB_.getName(o.getFieldValue("NAME"),t.module$exports$Blockly$Names.NameType.PROCEDURE),r="",t.Blockly.Python.STATEMENT_PREFIX&&(r+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,o)),t.Blockly.Python.STATEMENT_SUFFIX&&(r+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o)),r&&(r=t.Blockly.Python.prefixLines(r,t.Blockly.Python.INDENT)),y="",t.Blockly.Python.INFINITE_LOOP_TRAP&&(y=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.INFINITE_LOOP_TRAP,o),t.Blockly.Python.INDENT)),n=t.Blockly.Python.statementToCode(o,"STACK");var c=t.Blockly.Python.valueToCode(o,"RETURN",t.Blockly.Python.ORDER_NONE)||"",i="";n&&c&&(i=r),c?c=t.Blockly.Python.INDENT+"return "+c+"\n":n||(n=t.Blockly.Python.PASS);for(var a=[],E=o.getVars(),_=0;_<E.length;_++)a[_]=t.Blockly.Python.nameDB_.getName(E[_],t.module$exports$Blockly$Names.NameType.VARIABLE);return e="def "+l+"("+a.join(", ")+"):\n"+e+r+y+n+i+c,e=t.Blockly.Python.scrub_(o,e),t.Blockly.Python.definitions_["%"+l]=e,null},t.Blockly.Python.procedures_defnoreturn=t.Blockly.Python.procedures_defreturn,t.Blockly.Python.procedures_callreturn=function(o){for(var n=t.Blockly.Python.nameDB_.getName(o.getFieldValue("NAME"),t.module$exports$Blockly$Names.NameType.PROCEDURE),l=[],e=o.getVars(),r=0;r<e.length;r++)l[r]=t.Blockly.Python.valueToCode(o,"ARG"+r,t.Blockly.Python.ORDER_NONE)||"None";return[n+"("+l.join(", ")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.procedures_callnoreturn=function(o){return t.Blockly.Python.procedures_callreturn(o)[0]+"\n"},t.Blockly.Python.procedures_ifreturn=function(o){var n="if "+(t.Blockly.Python.valueToCode(o,"CONDITION",t.Blockly.Python.ORDER_NONE)||"False")+":\n";return t.Blockly.Python.STATEMENT_SUFFIX&&(n+=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o),t.Blockly.Python.INDENT)),o.hasReturnValue_?(o=t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"None",n+=t.Blockly.Python.INDENT+"return "+o+"\n"):n+=t.Blockly.Python.INDENT+"return\n",n},t.Blockly.Python.addReservedWords("math,random,Number"),t.Blockly.Python.math_number=function(o){if(1/0===(o=Number(o.getFieldValue("NUM")))){o='float("inf")';var n=t.Blockly.Python.ORDER_FUNCTION_CALL}else-1/0===o?(o='-float("inf")',n=t.Blockly.Python.ORDER_UNARY_SIGN):n=0>o?t.Blockly.Python.ORDER_UNARY_SIGN:t.Blockly.Python.ORDER_ATOMIC;return[o,n]},t.Blockly.Python.math_arithmetic=function(o){var n={ADD:[" + ",t.Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",t.Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",t.Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",t.Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",t.Blockly.Python.ORDER_EXPONENTIATION]}[o.getFieldValue("OP")],l=n[0];return n=n[1],[(t.Blockly.Python.valueToCode(o,"A",n)||"0")+l+(o=t.Blockly.Python.valueToCode(o,"B",n)||"0"),n]},t.Blockly.Python.math_single=function(o){var n=o.getFieldValue("OP");if("NEG"===n){var l=t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_UNARY_SIGN)||"0";return["-"+l,t.Blockly.Python.ORDER_UNARY_SIGN]}switch(t.Blockly.Python.definitions_.import_math="import math",o="SIN"===n||"COS"===n||"TAN"===n?t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0":t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_NONE)||"0",n){case"ABS":l="math.fabs("+o+")";break;case"ROOT":l="math.sqrt("+o+")";break;case"LN":l="math.log("+o+")";break;case"LOG10":l="math.log10("+o+")";break;case"EXP":l="math.exp("+o+")";break;case"POW10":l="math.pow(10,"+o+")";break;case"ROUND":l="round("+o+")";break;case"ROUNDUP":l="math.ceil("+o+")";break;case"ROUNDDOWN":l="math.floor("+o+")";break;case"SIN":l="math.sin("+o+" / 180.0 * math.pi)";break;case"COS":l="math.cos("+o+" / 180.0 * math.pi)";break;case"TAN":l="math.tan("+o+" / 180.0 * math.pi)"}if(l)return[l,t.Blockly.Python.ORDER_FUNCTION_CALL];switch(n){case"ASIN":l="math.asin("+o+") / math.pi * 180";break;case"ACOS":l="math.acos("+o+") / math.pi * 180";break;case"ATAN":l="math.atan("+o+") / math.pi * 180";break;default:throw Error("Unknown math operator: "+n)}return[l,t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.math_constant=function(o){var n={PI:["math.pi",t.Blockly.Python.ORDER_MEMBER],E:["math.e",t.Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",t.Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",t.Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",t.Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",t.Blockly.Python.ORDER_ATOMIC]};return"INFINITY"!==(o=o.getFieldValue("CONSTANT"))&&(t.Blockly.Python.definitions_.import_math="import math"),n[o]},t.Blockly.Python.math_number_property=function(o){var n={EVEN:[" % 2 == 0",t.Blockly.Python.ORDER_MULTIPLICATIVE,t.Blockly.Python.ORDER_RELATIONAL],ODD:[" % 2 == 1",t.Blockly.Python.ORDER_MULTIPLICATIVE,t.Blockly.Python.ORDER_RELATIONAL],WHOLE:[" % 1 == 0",t.Blockly.Python.ORDER_MULTIPLICATIVE,t.Blockly.Python.ORDER_RELATIONAL],POSITIVE:[" > 0",t.Blockly.Python.ORDER_RELATIONAL,t.Blockly.Python.ORDER_RELATIONAL],NEGATIVE:[" < 0",t.Blockly.Python.ORDER_RELATIONAL,t.Blockly.Python.ORDER_RELATIONAL],DIVISIBLE_BY:[null,t.Blockly.Python.ORDER_MULTIPLICATIVE,t.Blockly.Python.ORDER_RELATIONAL],PRIME:[null,t.Blockly.Python.ORDER_NONE,t.Blockly.Python.ORDER_FUNCTION_CALL]},l=o.getFieldValue("PROPERTY"),e=(n=t.$jscomp.makeIterator(n[l])).next().value,r=n.next().value;if(n=n.next().value,r=t.Blockly.Python.valueToCode(o,"NUMBER_TO_CHECK",r)||"0","PRIME"===l)t.Blockly.Python.definitions_.import_math="import math",t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",o=t.Blockly.Python.provideFunction_("math_isPrime","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):\n  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n  # If n is not a number but a string, try parsing it.\n  if not isinstance(n, Number):\n    try:\n      n = float(n)\n    except:\n      return False\n  if n == 2 or n == 3:\n    return True\n  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.\n  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:\n    return False\n  # Check all the numbers of form 6k +/- 1, up to sqrt(n).\n  for x in range(6, int(math.sqrt(n)) + 2, 6):\n    if n % (x - 1) == 0 or n % (x + 1) == 0:\n      return False\n  return True\n")+"("+r+")";else if("DIVISIBLE_BY"===l){if("0"===(o=t.Blockly.Python.valueToCode(o,"DIVISOR",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0"))return["False",t.Blockly.Python.ORDER_ATOMIC];o=r+" % "+o+" == 0"}else o=r+e;return[o,n]},t.Blockly.Python.math_change=function(o){t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";var n=t.Blockly.Python.valueToCode(o,"DELTA",t.Blockly.Python.ORDER_ADDITIVE)||"0";return(o=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE))+" = ("+o+" if isinstance("+o+", Number) else 0) + "+n+"\n"},t.Blockly.Python.math_round=t.Blockly.Python.math_single,t.Blockly.Python.math_trig=t.Blockly.Python.math_single,t.Blockly.Python.math_on_list=function(o){var n=o.getFieldValue("OP");switch(o=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_NONE)||"[]",n){case"SUM":n="sum("+o+")";break;case"MIN":n="min("+o+")";break;case"MAX":n="max("+o+")";break;case"AVERAGE":t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",n=t.Blockly.Python.provideFunction_("math_mean","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):\n  localList = [e for e in myList if isinstance(e, Number)]\n  if not localList: return\n  return float(sum(localList)) / len(localList)\n")+"("+o+")";break;case"MEDIAN":t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",n=t.Blockly.Python.provideFunction_("math_median","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):\n  localList = sorted([e for e in myList if isinstance(e, Number)])\n  if not localList: return\n  if len(localList) % 2 == 0:\n    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0\n  else:\n    return localList[(len(localList) - 1) // 2]\n")+"("+o+")";break;case"MODE":n=t.Blockly.Python.provideFunction_("math_modes","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+'(some_list):\n  modes = []\n  # Using a lists of [item, count] to keep count rather than dict\n  # to avoid "unhashable" errors when the counted item is itself a list or dict.\n  counts = []\n  maxCount = 1\n  for item in some_list:\n    found = False\n    for count in counts:\n      if count[0] == item:\n        count[1] += 1\n        maxCount = max(maxCount, count[1])\n        found = True\n    if not found:\n      counts.append([item, 1])\n  for counted_item, item_count in counts:\n    if item_count == maxCount:\n      modes.append(counted_item)\n  return modes\n')+"("+o+")";break;case"STD_DEV":t.Blockly.Python.definitions_.import_math="import math",n=t.Blockly.Python.provideFunction_("math_standard_deviation","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):\n  n = len(numbers)\n  if n == 0: return\n  mean = float(sum(numbers)) / n\n  variance = sum((x - mean) ** 2 for x in numbers) / n\n  return math.sqrt(variance)\n")+"("+o+")";break;case"RANDOM":t.Blockly.Python.definitions_.import_random="import random",n="random.choice("+o+")";break;default:throw Error("Unknown operator: "+n)}return[n,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_modulo=function(o){return[(t.Blockly.Python.valueToCode(o,"DIVIDEND",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0")+" % "+(o=t.Blockly.Python.valueToCode(o,"DIVISOR",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0"),t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.math_constrain=function(o){return["min(max("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"0")+", "+(t.Blockly.Python.valueToCode(o,"LOW",t.Blockly.Python.ORDER_NONE)||"0")+"), "+(o=t.Blockly.Python.valueToCode(o,"HIGH",t.Blockly.Python.ORDER_NONE)||"float('inf')")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_random_int=function(o){return t.Blockly.Python.definitions_.import_random="import random",["random.randint("+(t.Blockly.Python.valueToCode(o,"FROM",t.Blockly.Python.ORDER_NONE)||"0")+", "+(o=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"0")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_random_float=function(o){return t.Blockly.Python.definitions_.import_random="import random",["random.random()",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_atan2=function(o){t.Blockly.Python.definitions_.import_math="import math";var n=t.Blockly.Python.valueToCode(o,"X",t.Blockly.Python.ORDER_NONE)||"0";return["math.atan2("+(t.Blockly.Python.valueToCode(o,"Y",t.Blockly.Python.ORDER_NONE)||"0")+", "+n+") / math.pi * 180",t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.controls_repeat_ext=function(o){var n=o.getField("TIMES")?String(parseInt(o.getFieldValue("TIMES"),10)):t.Blockly.Python.valueToCode(o,"TIMES",t.Blockly.Python.ORDER_NONE)||"0";n=(0,t.module$exports$Blockly$utils$string.isNumber)(n)?parseInt(n,10):"int("+n+")";var l=t.Blockly.Python.statementToCode(o,"DO");return l=t.Blockly.Python.addLoopTrap(l,o)||t.Blockly.Python.PASS,"for "+t.Blockly.Python.nameDB_.getDistinctName("count",t.module$exports$Blockly$Names.NameType.VARIABLE)+" in range("+n+"):\n"+l},t.Blockly.Python.controls_repeat=t.Blockly.Python.controls_repeat_ext,t.Blockly.Python.controls_whileUntil=function(o){var n="UNTIL"===o.getFieldValue("MODE"),l=t.Blockly.Python.valueToCode(o,"BOOL",n?t.Blockly.Python.ORDER_LOGICAL_NOT:t.Blockly.Python.ORDER_NONE)||"False",e=t.Blockly.Python.statementToCode(o,"DO");return n&&(l="not "+l),"while "+l+":\n"+(e=t.Blockly.Python.addLoopTrap(e,o)||t.Blockly.Python.PASS)},t.Blockly.Python.controls_for=function(o){var n=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE),l=t.Blockly.Python.valueToCode(o,"FROM",t.Blockly.Python.ORDER_NONE)||"0",e=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"0",r=t.Blockly.Python.valueToCode(o,"BY",t.Blockly.Python.ORDER_NONE)||"1",y=t.Blockly.Python.statementToCode(o,"DO");y=t.Blockly.Python.addLoopTrap(y,o)||t.Blockly.Python.PASS;var c="";o=function(){return t.Blockly.Python.provideFunction_("upRange","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):\n  while start <= stop:\n    yield start\n    start += abs(step)\n")};var i=function(){return t.Blockly.Python.provideFunction_("downRange","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):\n  while start >= stop:\n    yield start\n    start -= abs(step)\n")};if((0,t.module$exports$Blockly$utils$string.isNumber)(l)&&(0,t.module$exports$Blockly$utils$string.isNumber)(e)&&(0,t.module$exports$Blockly$utils$string.isNumber)(r))l=Number(l),e=Number(e),r=Math.abs(Number(r)),0==l%1&&0==e%1&&0==r%1?(l<=e?(e++,o=0===l&&1===r?e:l+", "+e,1!==r&&(o+=", "+r)):o=l+", "+--e+", -"+r,o="range("+o+")"):(o=l<e?o():i(),o+="("+l+", "+e+", "+r+")");else{var a=function(o,l){return(0,t.module$exports$Blockly$utils$string.isNumber)(o)?o=Number(o):o.match(/^\w+$/)?o="float("+o+")":(l=t.Blockly.Python.nameDB_.getDistinctName(n+l,t.module$exports$Blockly$Names.NameType.VARIABLE),c+=l+" = float("+o+")\n",o=l),o};l=a(l,"_start"),e=a(e,"_end"),r=a(r,"_inc"),"number"==typeof l&&"number"==typeof e?(o=l<e?o():i(),o+="("+l+", "+e+", "+r+")"):o="("+l+" <= "+e+") and "+o()+"("+l+", "+e+", "+r+") or "+i()+"("+l+", "+e+", "+r+")"}return c+="for "+n+" in "+o+":\n"+y},t.Blockly.Python.controls_forEach=function(o){var n=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE),l=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_RELATIONAL)||"[]",e=t.Blockly.Python.statementToCode(o,"DO");return"for "+n+" in "+l+":\n"+(e=t.Blockly.Python.addLoopTrap(e,o)||t.Blockly.Python.PASS)},t.Blockly.Python.controls_flow_statements=function(o){var n="";if(t.Blockly.Python.STATEMENT_PREFIX&&(n+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,o)),t.Blockly.Python.STATEMENT_SUFFIX&&(n+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o)),t.Blockly.Python.STATEMENT_PREFIX){var l=o.getSurroundLoop();l&&!l.suppressPrefixSuffix&&(n+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,l))}switch(o.getFieldValue("FLOW")){case"BREAK":return n+"break\n";case"CONTINUE":return n+"continue\n"}throw Error("Unknown flow statement.")},t.Blockly.Python.controls_if=function(o){var n=0,l="";t.Blockly.Python.STATEMENT_PREFIX&&(l+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,o));do{var e=t.Blockly.Python.valueToCode(o,"IF"+n,t.Blockly.Python.ORDER_NONE)||"False",r=t.Blockly.Python.statementToCode(o,"DO"+n)||t.Blockly.Python.PASS;t.Blockly.Python.STATEMENT_SUFFIX&&(r=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o),t.Blockly.Python.INDENT)+r),l+=(0===n?"if ":"elif ")+e+":\n"+r,n++}while(o.getInput("IF"+n));return(o.getInput("ELSE")||t.Blockly.Python.STATEMENT_SUFFIX)&&(r=t.Blockly.Python.statementToCode(o,"ELSE")||t.Blockly.Python.PASS,t.Blockly.Python.STATEMENT_SUFFIX&&(r=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o),t.Blockly.Python.INDENT)+r),l+="else:\n"+r),l},t.Blockly.Python.controls_ifelse=t.Blockly.Python.controls_if,t.Blockly.Python.logic_compare=function(o){var n={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[o.getFieldValue("OP")],l=t.Blockly.Python.ORDER_RELATIONAL;return[(t.Blockly.Python.valueToCode(o,"A",l)||"0")+" "+n+" "+(o=t.Blockly.Python.valueToCode(o,"B",l)||"0"),l]},t.Blockly.Python.logic_operation=function(o){var n="AND"===o.getFieldValue("OP")?"and":"or",l="and"===n?t.Blockly.Python.ORDER_LOGICAL_AND:t.Blockly.Python.ORDER_LOGICAL_OR,e=t.Blockly.Python.valueToCode(o,"A",l);if(o=t.Blockly.Python.valueToCode(o,"B",l),e||o){var r="and"===n?"True":"False";e||(e=r),o||(o=r)}else o=e="False";return[e+" "+n+" "+o,l]},t.Blockly.Python.logic_negate=function(o){return["not "+(t.Blockly.Python.valueToCode(o,"BOOL",t.Blockly.Python.ORDER_LOGICAL_NOT)||"True"),t.Blockly.Python.ORDER_LOGICAL_NOT]},t.Blockly.Python.logic_boolean=function(o){return["TRUE"===o.getFieldValue("BOOL")?"True":"False",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.logic_null=function(o){return["None",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.logic_ternary=function(o){var n=t.Blockly.Python.valueToCode(o,"IF",t.Blockly.Python.ORDER_CONDITIONAL)||"False";return[(t.Blockly.Python.valueToCode(o,"THEN",t.Blockly.Python.ORDER_CONDITIONAL)||"None")+" if "+n+" else "+(o=t.Blockly.Python.valueToCode(o,"ELSE",t.Blockly.Python.ORDER_CONDITIONAL)||"None"),t.Blockly.Python.ORDER_CONDITIONAL]},t.Blockly.Python.lists_create_empty=function(o){return["[]",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.lists_create_with=function(o){for(var n=Array(o.itemCount_),l=0;l<o.itemCount_;l++)n[l]=t.Blockly.Python.valueToCode(o,"ADD"+l,t.Blockly.Python.ORDER_NONE)||"None";return["["+n.join(", ")+"]",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.lists_repeat=function(o){return["["+(t.Blockly.Python.valueToCode(o,"ITEM",t.Blockly.Python.ORDER_NONE)||"None")+"] * "+(o=t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0"),t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.lists_length=function(o){return["len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"[]")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_isEmpty=function(o){return["not len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"[]")+")",t.Blockly.Python.ORDER_LOGICAL_NOT]},t.Blockly.Python.lists_indexOf=function(o){var n=t.Blockly.Python.valueToCode(o,"FIND",t.Blockly.Python.ORDER_NONE)||"[]",l=t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"''",e=" -1",r="",y=" - 1";return o.workspace.options.oneBasedIndex&&(e=" 0",r=" + 1",y=""),[("FIRST"===o.getFieldValue("END")?t.Blockly.Python.provideFunction_("first_index","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):\n  try: index = my_list.index(elem)"+r+"\n  except: index ="+e+"\n  return index\n"):t.Blockly.Python.provideFunction_("last_index","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):\n  try: index = len(my_list) - my_list[::-1].index(elem)"+y+"\n  except: index ="+e+"\n  return index\n"))+"("+l+", "+n+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_getIndex=function(o){var n=o.getFieldValue("MODE")||"GET",l=o.getFieldValue("WHERE")||"FROM_START",e=t.Blockly.Python.valueToCode(o,"VALUE","RANDOM"===l?t.Blockly.Python.ORDER_NONE:t.Blockly.Python.ORDER_MEMBER)||"[]";switch(l){case"FIRST":if("GET"===n)return[e+"[0]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===n)return[e+".pop(0)",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===n)return e+".pop(0)\n";break;case"LAST":if("GET"===n)return[e+"[-1]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===n)return[e+".pop()",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===n)return e+".pop()\n";break;case"FROM_START":if(o=t.Blockly.Python.getAdjustedInt(o,"AT"),"GET"===n)return[e+"["+o+"]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===n)return[e+".pop("+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===n)return e+".pop("+o+")\n";break;case"FROM_END":if(o=t.Blockly.Python.getAdjustedInt(o,"AT",1,!0),"GET"===n)return[e+"["+o+"]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===n)return[e+".pop("+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===n)return e+".pop("+o+")\n";break;case"RANDOM":if(t.Blockly.Python.definitions_.import_random="import random","GET"===n)return["random.choice("+e+")",t.Blockly.Python.ORDER_FUNCTION_CALL];if(e=t.Blockly.Python.provideFunction_("lists_remove_random_item","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):\n  x = int(random.random() * len(myList))\n  return myList.pop(x)\n")+"("+e+")","GET_REMOVE"===n)return[e,t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===n)return e+"\n"}throw Error("Unhandled combination (lists_getIndex).")},t.Blockly.Python.lists_setIndex=function(o){var n=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_MEMBER)||"[]",l=o.getFieldValue("MODE")||"GET",e=o.getFieldValue("WHERE")||"FROM_START",r=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"None";switch(e){case"FIRST":if("SET"===l)return n+"[0] = "+r+"\n";if("INSERT"===l)return n+".insert(0, "+r+")\n";break;case"LAST":if("SET"===l)return n+"[-1] = "+r+"\n";if("INSERT"===l)return n+".append("+r+")\n";break;case"FROM_START":if(o=t.Blockly.Python.getAdjustedInt(o,"AT"),"SET"===l)return n+"["+o+"] = "+r+"\n";if("INSERT"===l)return n+".insert("+o+", "+r+")\n";break;case"FROM_END":if(o=t.Blockly.Python.getAdjustedInt(o,"AT",1,!0),"SET"===l)return n+"["+o+"] = "+r+"\n";if("INSERT"===l)return n+".insert("+o+", "+r+")\n";break;case"RANDOM":if(t.Blockly.Python.definitions_.import_random="import random",n.match(/^\w+$/)?o="":(e=(o=t.Blockly.Python.nameDB_.getDistinctName("tmp_list",t.module$exports$Blockly$Names.NameType.VARIABLE))+" = "+n+"\n",n=o,o=e),o+=(e=t.Blockly.Python.nameDB_.getDistinctName("tmp_x",t.module$exports$Blockly$Names.NameType.VARIABLE))+" = int(random.random() * len("+n+"))\n","SET"===l)return o+(n+"[")+e+"] = "+r+"\n";if("INSERT"===l)return o+(n+".insert(")+e+", "+r+")\n"}throw Error("Unhandled combination (lists_setIndex).")},t.Blockly.Python.lists_getSublist=function(o){var n=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_MEMBER)||"[]",l=o.getFieldValue("WHERE1"),e=o.getFieldValue("WHERE2");switch(l){case"FROM_START":0===(l=t.Blockly.Python.getAdjustedInt(o,"AT1"))&&(l="");break;case"FROM_END":l=t.Blockly.Python.getAdjustedInt(o,"AT1",1,!0);break;case"FIRST":l="";break;default:throw Error("Unhandled option (lists_getSublist)")}switch(e){case"FROM_START":o=t.Blockly.Python.getAdjustedInt(o,"AT2",1);break;case"FROM_END":o=t.Blockly.Python.getAdjustedInt(o,"AT2",0,!0),(0,t.module$exports$Blockly$utils$string.isNumber)(String(o))?0===o&&(o=""):(t.Blockly.Python.definitions_.import_sys="import sys",o+=" or sys.maxsize");break;case"LAST":o="";break;default:throw Error("Unhandled option (lists_getSublist)")}return[n+"["+l+" : "+o+"]",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.lists_sort=function(o){var n=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_NONE)||"[]",l=o.getFieldValue("TYPE");return o="1"===o.getFieldValue("DIRECTION")?"False":"True",[t.Blockly.Python.provideFunction_("lists_sort","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+'(my_list, type, reverse):\n  def try_float(s):\n    try:\n      return float(s)\n    except:\n      return 0\n  key_funcs = {\n    "NUMERIC": try_float,\n    "TEXT": str,\n    "IGNORE_CASE": lambda s: str(s).lower()\n  }\n  key_func = key_funcs[type]\n  list_cpy = list(my_list)\n  return sorted(list_cpy, key=key_func, reverse=reverse)\n')+"("+n+', "'+l+'", '+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_split=function(o){var n=o.getFieldValue("MODE");if("SPLIT"===n)o=(n=t.Blockly.Python.valueToCode(o,"INPUT",t.Blockly.Python.ORDER_MEMBER)||"''")+".split("+(o=t.Blockly.Python.valueToCode(o,"DELIM",t.Blockly.Python.ORDER_NONE))+")";else{if("JOIN"!==n)throw Error("Unknown mode: "+n);n=t.Blockly.Python.valueToCode(o,"INPUT",t.Blockly.Python.ORDER_NONE)||"[]",o=(t.Blockly.Python.valueToCode(o,"DELIM",t.Blockly.Python.ORDER_MEMBER)||"''")+".join("+n+")"}return[o,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_reverse=function(o){return["list(reversed("+(t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_NONE)||"[]")+"))",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.colour_picker=function(o){return[t.Blockly.Python.quote_(o.getFieldValue("COLOUR")),t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.colour_random=function(o){return t.Blockly.Python.definitions_.import_random="import random",["'#%06x' % random.randint(0, 2**24 - 1)",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.colour_rgb=function(o){return[t.Blockly.Python.provideFunction_("colour_rgb","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):\n  r = round(min(100, max(0, r)) * 2.55)\n  g = round(min(100, max(0, g)) * 2.55)\n  b = round(min(100, max(0, b)) * 2.55)\n  return '#%02x%02x%02x' % (r, g, b)\n")+"("+(t.Blockly.Python.valueToCode(o,"RED",t.Blockly.Python.ORDER_NONE)||0)+", "+(t.Blockly.Python.valueToCode(o,"GREEN",t.Blockly.Python.ORDER_NONE)||0)+", "+(o=t.Blockly.Python.valueToCode(o,"BLUE",t.Blockly.Python.ORDER_NONE)||0)+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.colour_blend=function(o){return[t.Blockly.Python.provideFunction_("colour_blend","\ndef "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):\n  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)\n  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)\n  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)\n  ratio = min(1, max(0, ratio))\n  r = round(r1 * (1 - ratio) + r2 * ratio)\n  g = round(g1 * (1 - ratio) + g2 * ratio)\n  b = round(b1 * (1 - ratio) + b2 * ratio)\n  return '#%02x%02x%02x' % (r, g, b)\n")+"("+(t.Blockly.Python.valueToCode(o,"COLOUR1",t.Blockly.Python.ORDER_NONE)||"'#000000'")+", "+(t.Blockly.Python.valueToCode(o,"COLOUR2",t.Blockly.Python.ORDER_NONE)||"'#000000'")+", "+(o=t.Blockly.Python.valueToCode(o,"RATIO",t.Blockly.Python.ORDER_NONE)||0)+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.__namespace__=t,t.Blockly.Python}));